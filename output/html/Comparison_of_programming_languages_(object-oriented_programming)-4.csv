;Precondition;Postcondition;Check;Invariant;Loop
ABAP Objects;N/A;N/A;N/A;N/A;N/A
C++ (STL);N/A;;;;
C#;Spec#: type foo( «parameters» ) requires expression { body };Spec#: type foo( «parameters» ) ensures expression { body };;;
Java;N/A;N/A;N/A;N/A;N/A
Objective-C;N/A;;;;
Visual Basic .NET;N/A;;;;
D;f in { asserts } body{ instructions };f out (result) { asserts } body{ instructions };assert(expression);invariant() { expression };
Eiffel;f require tag: expression do end;f do ensure tag: expression end;f do check tag: expression end end;class X invariant tag: expression end;from instructions invariant tag: expression until expr loop instructions variant tag: expression end
Python;N/A;N/A;N/A;N/A;N/A
PHP;N/A;;;;
Perl;N/A;;;;
Perl 6;PRE { condition };POST { condition };;;
Ruby;N/A;N/A;N/A;N/A;N/A
Windows PowerShell;N/A;;;;
OCaml;N/A;;;;
F#;N/A;;;;
COBOL;N/A;;;;
