 File system; Hard link; Symbolic link; Block journaling; Metadata-only journaling; Case-sensitive; Case-preserving; File Change Log; Internal snapshotting / branching; XIP; Filesystem-level encryption; Data deduplication; Data checksums
DECtape;no;no;no;no;no;no;no;no;no;no;no;no
BeeGFS;yes;yes;yes;yes;yes;yes;no;no;no;no;yes;no
Level-D;no;no;no;no;no;no;no;no;no;no;no;no
RT-11;no;no;no;no;no;no;no;no;no;no;no;no
APFS;yes;yes;dunno;dunno;partial;yes;dunno;yes;dunno;yes;partial;no
Version 6 Unix file system (V6FS);yes;no;no;no;yes;yes;no;no;no;no;no;no
Version 7 Unix file system (V7FS);yes;noSystem V Release 4, and some other [[Unix]] systems, retrofitted symbolic links to their versions of the [[Version 7 Unix]] file system, although the original version didn't support them.;no;no;yes;yes;no;no;no;no;no;no
FAT12;no;no;no;partial (with TFAT12 only);no;partial (with VFAT LFNs only);no;no;no;partial (DR-DOS with SECURITY only);no;no
FAT16/ FAT16B/ FAT16X;no;no;no;partial (with TFAT16 only);no;partial (with VFAT LFNs only);no;no;no;partial (DR-DOS with SECURITY only);no;no
FAT32/ FAT32X;no;no;no?;partial (with TFAT32 only);no;partial (with VFAT LFNs only);no;no;no;no;no;no
GFS;yes;yesContext based symlinks were supported in GFS, GFS2 only supports standard symlinks since the bind mount feature of the Linux VFS has made context based symlinks obsolete;yes;yesOptional journaling of data;yes;yes;no;no;no;no;dunno;no
HPFS;no;no;no;no;no;yes;no;dunno;no;no;dunno;no
NTFS;yes;yes NTFS 3.0 (Windows 2000) and higher can create ''junctions'', which allow entire directories (but not individual files) to be mapped to elsewhere in the directory tree of the same partition (file system). These are implemented through ''reparse points'', which allow the normal process of filename resolution to be extended in a flexible manner.;noNTFS stores everything, even the file data, as meta-data, so its log is closer to block journaling.;yesnote-37 (2000);yesWhile NTFS itself supports case sensitivity, the Win32 environment subsystem cannot create files whose names differ only by case for compatibility reasons. When a file is opened for writing, if there is any existing file whose name is a case-insensitive match for the new file, the existing file is truncated and opened for writing instead of a new file with a different name being created. Other subsystems like e. g. [[Services for Unix]], that operate directly above the kernel and not on top of Win32 can have case-sensitivity.;yes;yes;partialNTFS does not internally support snapshots, but in conjunction with the [[Volume Shadow Copy Service]] can maintain persistent block differential volume snapshots.;dunno;yes;yesSupported only on Windows Server SKUs. However, partitions deduplicated on Server can be used on Client.;no
HFS Plus;yes;yes;no;yesMetadata-only journaling was introduced in the Mac OS X 10.2.2 HFS Plus driver"; journaling is enabled by default on Mac OS X 10.3 and later.;partial HFS Plus version 5 optionally supports case-sensitivity. However, since case-sensitivity is fundamentally different from case-insensitivity, a new signature was required so existing HFS Plus utilities would not see case-sensitivity as a file system error that needed to be corrected. Since the new signature is 'HX', it is often believed this is a new filesystem instead of a simply an upgraded version of HFS Plus.;yes;yesMac OS X Tiger (10.4) and late versions of Panther (10.3) provide file change logging (it's a feature of the file system software, not of the volume format, actually).;no;no;noHFS+ does not actually encrypt files: to implement [[FileVault]], OS X creates an HFS+ filesystem in a sparse, encrypted disk image that is automatically mounted over the home directory when the user logs in.;no;no
FFS;yes;yes;no;no;yes;yes;no;no;no;no;no;no
UFS1;yes;yes;no;no;yes;yes;no;no;no;no;no;no
UFS2;yes;yes;no;yes""[[Soft dependencies]]"" ([[softdep]]) in [[NetBSD]], called ""[[soft updates]]"" in [[FreeBSD]] provide meta-data consistency at all times without double writes ([[journaling file system|journaling]])  Journaled Soft Updates (SU+J) are the default as of FreeBSD 9.x-RELEASE;yes;yes;no;yes;dunno;no;no;no
HAMMER;yes;yes;yes;yes;yes;yes;dunno;yes;no;no;yes;yes
LFS;yes;yes;yesUDF, LFS, and NILFS are [[log-structured file system]]s and behave as if the entire file system were a journal.;no;yes;yes;no;yes;no;no;no;no
ext;yes;yes;no;no;yes;yes;no;no;no;no;no;no
Xiafs;yes;yes;no;no;yes;yes;no;no;no;no;no;no
ext2;yes;yes;no;no;yes;yes;no;no;yesLinux kernel versions 2.6.12 and newer.;no;no;no
ext3;yes;yes;yes (2001) Off by default.;yes (2001);yes;yes;no;no;yes;no;no;no
ext4;yes;yes;yesnote-62;yes;yes;yes;no;no;yes;yes, experimental;no;no
NOVA;yes;yes;no;yes;yes;yes;no;yes;yes;no;no;yes
F2FS;yes;yes;yesnote-38;no;yes;yes;no;no;no;yes, experimental;no;no
Lustre;yes;yes;yesnote-62;yes;yes;yes;no;no;no;no;no;no
NILFS;yes;yes;yesnote-38;no;yes;yes;no;yes;no;no;no;yes
ReiserFS;yes;yes;yesFull block journaling for ReiserFS was added to Linux 2.6.8.;yes;yes;yes;no;no;dunno;no;no;no
Reiser4;yes;yes;yes;no;yes;yes;no;dunno;dunno;yesReiser4 supports transparent compression and encryption with the ''cryptcompress'' plugin which is the default file handler in version 4.1.;dunno;no
OCFS;no;yes;no;no;yes;yes;no;no;no;no;no;no
OCFS2;yes;yes;yes;yes;yes;yes;no;no;no;no;no;no
XFS;yes;yes;yes;yes;yesOptionally no on IRIX.;yes;yes;no;dunno;no;yes, experimental;no
JFS;yes;yes;yes;yes (1990);yesParticular [[Installable File System]] drivers and [[operating system]]s may not support case sensitivity for JFS. OS/2 does not, and Linux has a mount option for disabling case sensitivity.;yes;no;dunno;dunno;no;dunno;no
QFS;yes;yes;no;yes;yes;yes;no;no;no;no;no;no
BFS;yes;yes;no;yes;yes;yes;dunno;no;no;no;no;no
NSS;yes;yes;dunno;yes;yesCase-sensitivity/Preservation depends on client. Windows, DOS, and OS/2 clients don't see/keep case differences, whereas clients accessing via NFS or AFP may.;yesnote-20;yesThe file change logs, last entry change timestamps, and other filesystem metadata, are all part of the extensive suite of auditing capabilities built into NDS/eDirectory called NSure Audit.;yes;no;yes;dunno;no
NWFS;yesAvailable only in the ""NFS"" namespace.;yesnote-53;no;no;yesnote-20;yesnote-20;yesnote-6;dunno;no;no;dunno;no
ODS-2;yes;yesThese are referred to as ""aliases"".;no;yes;no;no;yes;yes;no;no;no;no
ODS-5;yes;yesnote-18;no;yes;no;yes;yes;yes;dunno;no;no;no
UDF;yes;yes;yesnote-38;yesnote-38;yes;yes;no;no;yes;no;no;no
VxFS;yes;yes;yes;no;yes;yes;yes;yesVxFS provides an optional feature called ""Storage Checkpoints"" which allows for advanced file system snapshots.;dunno;no;Yes;no
Fossil;no;no;no;no;yes;yes;yes;yes;no;no;yes;no
ZFS;yes;yes;yesZFS is a transactional filesystem using copy-on-write semantics, guaranteeing an always-consistent on-disk state without the use of a traditional journal. However, it does also implement an intent log to provide better performance when synchronous writes are requested.;nonote-56;yes;yes;no;yes;no;yesApplies only to proprietary ZFS release and ZFS On Linux. Encryption support is not yet available in whole [[OpenZFS]].;yes;yes
Btrfs;yes;yes;yes;yes;yes;yes;dunno;yes;dunno;no, planned, not being developed (Nov, 2015);yes;yes
Minix V1;yes;yes;no;no;yes;yes;no;no;no;no;no;no
Minix V2;yes;yes;no;no;yes;yes;no;no;no;no;no;no
Minix V3;yes;yes;no;no;yes;yes;no;no;no;no;no;no
VMFS2;yes;yes;no;yes;yes;yes;no;no;no;no;no;no
VMFS3;yes;yes;no;yes;yes;yes;no;no;no;no;no;no
ReFS;no;yes;dunno;dunno;yesnote-36;yes;dunno;dunno;dunno;no;yes;yes
ISO 9660;no;no;no;no;no;no;no;no;no;no;noSome file system creation implementations reuse block references and support deduplication this way.  This is not supported by the standard, but usually works well due to the file system's read-only nature.;no
Rock Ridge;yes;yes;no;no;yes;yes;no;no;no;no;nonote-79;no
Joliet (""CDFS"");no;no;no;no;no;yes;no;no;no;no;nonote-79;no
SquashFS;yes;yes;no;no;yes;yes;no;no;no;no;yes;yes
File system;Hard link;Symbolic link;Block journaling;Metadata-only journaling;Case-sensitive;Case-preserving;File Change Log;Internal snapshotting / branching;XIP;Filesystem-level encryption;Data deduplication;Data checksums
